generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  username     String   @unique
  email        String   @unique
  passwordHash String
  displayName  String?
  bio          String?
  avatarUrl    String?
  posts        Post[]
  likes        Like[]
  comments     Comment[]
  createdAt    DateTime @default(now())
}

model Post {
  id             String   @id @default(cuid())
  user           User     @relation(fields: [userId], references: [id])
  userId         String
  videoUrl       String
  thumbUrl       String?
  caption        String?
  durationSecs   Int?
  views          Int      @default(0)
  likesCount     Int      @default(0)
  commentsCount  Int      @default(0)
  visibility     String   @default("public")
  createdAt      DateTime @default(now())
  likes          Like[]
  comments       Comment[]
}

model Like {
  id      String @id @default(cuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  post    Post   @relation(fields: [postId], references: [id])
  postId  String
  createdAt DateTime @default(now())
  @@unique([userId, postId])
}

model Comment {
  id        String   @id @default(cuid())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  text      String
  createdAt DateTime @default(now())
}

model Report {
  id        String   @id @default(cuid())
  reporter  User     @relation(fields: [reporterId], references: [id])
  reporterId String
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String?
  reason    String
  status    String   @default("pending")
  createdAt DateTime @default(now())
}
